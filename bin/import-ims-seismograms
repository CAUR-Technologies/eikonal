#!/usr/bin/env python

import tables
import numpy as np
import sys
import logging
import agstd.log

log = logging.root
log.setLevel(logging.INFO)

#--------------------------------------------------------
# function parse_description
# inputs:
# filename -- file name to read
# dirname -- directory name path to file
#--------------------------------------------------------

def parse_description(filename, dirname, **kw):
    s = open(os.path.join(dirname, filename)).read()
    additional_kw = [t for t in kw.iteritems()] + [('filename', filename)]
    s_s = [["S-%s" % k for k in description_re.findall(ps)] \
           for ps in s_event_re.findall(s)]
    s_p = [["P-%s" % k for k in description_re.findall(ps)] \
           for ps in p_event_re.findall(s)]
    if len(s_s) != 0:
        additional_kw.extend([[k.strip() for k in s_s1.strip().split('=')] \
                              for s_s1 in s_s[0]])
    if len(s_p) != 0:
        additional_kw.extend([[k.strip() for k in s_s1.strip().split('=')] \
                              for s_s1 in s_p[0]])
    return dict([[k.strip() for k in t.strip().split('=')] \
                 for t in description_re.findall(s)] + additional_kw)

#--------------------------------------------------------
# Class seismograms
#--------------------------------------------------------

class seismograms:
    signalX = tables.Float64Col(shape = 50000, pos = 0)
    signalY = tables.Float64Col(shape = 50000, pos = 0)
    signalZ = tables.Float64Col(shape = 50000, pos = 0)

#    station_pos = 
#    event_pos
    

#--------------------------------------------------------
# Main program
#--------------------------------------------------------

if len(sys.argv) >= 4:
    fname = sys.argv[1]
    dbname = sys.argv[2]
    dirlst = sys.argv[3:]

    # creating and opening the data base using h5f tables

    h5file = openFile(dbname, mode = "w", title = "DB seismograms")

    group = h5file.createGroup("/", 'seismograms',
                               'Seismograms and information')

    table = h5file.createTable(group, 'seismograms', group, "Readout example")

    for dirname in dirlst:
        
        
else:
    log.error("Error, Argument(s) missing,")
    log.info("usage: import-ims-seismograms dbfilename dbname dirlst")







